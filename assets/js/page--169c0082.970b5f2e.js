(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{523:function(t,e,o){"use strict";o.r(e);var s=o(2),n=Object(s.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("p",[this._v("What are the three main types of testing we can accomplish in Vue? What does each method provide?\nThe three types of testing in vue are unit testing, component testing and end-to-end testing. UNiot testing allow you to test individual units of code. A console.log may test an individual unit of code.")]),this._v(" "),e("p",[this._v("What testing method do you think is the most useful? Why?\nEnd to end is the most useful because it is testing what happens when users actually use your application. This type of testing will also validate the unit and component testing that you do along the way to completion. While unit and component testing provide confidence to the developer as he or she builds the program E2E takes a more whole body approach to testing the end result. End to End also allows you to test across different browsers. This extremely helpful to test edge cases since ther are a huge number of different browsers and devices on which to run them. Meow.")]),this._v(" "),e("p",[this._v("What testing method do you think is the least useful? Why? Least useful would be unit testing. It is the least useful because it can be done along the way as a program is built. It would make sense to test units of code that were critical to the overall success of the project to make sure that they handle all the edge cases that can be thought of, but for day to day run of the mill function that gets used again and again it it most likely not worth the time and effort to do such testing.")])])}),[],!1,null,null,null);e.default=n.exports}}]);